server.port=80
#datasource
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://39.106.119.206:3306/orange?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.datasource.password=wang467132
spring.datasource.username=root
#最小空闲连接
spring.datasource.hikari.minimum-idle=5
#最大连接数
spring.datasource.hikari.maximum-pool-size=15
#空闲连接超时时间
spring.datasource.hikari.idle-timeout=30000
#连接池名称
spring.datasource.hikari.pool-name=DatebookHikariCP
#连接最大存活时间
spring.datasource.hikari.max-lifetime=1800000
#连接超时时间ms
spring.datasource.hikari.connection-timeout=30000
## Mybatis
mybatis.configuration.map-underscore-to-camel-case=true
# Redis
spring.redis.database=0
spring.redis.host=39.106.119.206
spring.redis.port=6379
spring.redis.password=wang467132
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-wait=3000ms
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.min-idle=0
spring.redis.timeout=1000ms

#logback配置文件
logging.config=classpath:logback-boot.xml
# zookeeper curator
#重试次数
curator.retryCount=5
#重试间隔时间
curator.elapsedTimeMs=5000
# zookeeper 地址
curator.connectString=39.106.119.206:2181
# session超时时间
curator.sessionTimeoutMs=60000
# 连接超时时间
curator.connectionTimeoutMs=5000
#kafka
spring.kafka.bootstrap-servers=39.106.119.206:9092
#kafka provider
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#kafka consumer
# 指定默认消费者group id
spring.kafka.consumer.group-id=orange
#latest/earliest
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000ms
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer